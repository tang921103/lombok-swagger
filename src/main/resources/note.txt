Lombok有哪些注解:
@Setter
@Getter
@Data  该注解使用在类上，该注解会提供getter、setter、equals、canEqual、hashCode、toString方法
@Log(这是一个泛型注解，具体有很多种形式)
@AllArgsConstructor 该注解使用在类上，该注解提供一个全参数的构造方法，默认不提供无参构造。
@NoArgsConstructor  该注解使用在类上，该注解提供一个无参构造
@EqualsAndHashCode  该注解使用在类上，该注解在类级别注释会同时生成equals和hashCode。
@NonNull  该注解使用在属性上，该注解用于属的非空检查，当放在setter方法的字段上，将生成一个空检查，如果为空，则抛出NullPointerException。
@Cleanup  该注解使用在属性前，该注解是用来保证分配的资源被释放。在本地变量上使用该注解，任何后续代码都将封装在try/finally中，
            确保当前作用于中的资源被释放。默认@Cleanup清理的方法为close，可以使用value指定不同的方法名称。
@ToString 该注解使用在类上，该注解默认生成任何非讲台字段以名称-值的形式输出。
          1、如果需要可以通过注释参数includeFieldNames来控制输出中是否包含的属性名称。
          2、可以通过exclude参数中包含字段名称，可以从生成的方法中排除特定字段。
          3、可以通过callSuper参数控制父类的输出。

@RequiredArgsConstructor  该注解使用在类上，使用类中所有带有 @NonNull 注解的或者带有 final 修饰的成员变量生成对应的构造方法。
@Value  这个注解用在 类 上，会生成含所有参数的构造方法，get 方法，此外还提供了equals、hashCode、toString 方法 ,注意：没有setter
@SneakyThrows
@Synchronized  该注解使用在类或者实例方法上，Synchronized在一个方法上，使用关键字可能会导致结果和想要的结果不同，因为多线程情况下会出现异常情况。Synchronized
               关键字将在this示例方法情况下锁定当前对象，或者class讲台方法的对象上多锁定。这可能会导致死锁现象。一般情况下建议锁定一个专门用于此目的的独立锁，而不是允许公共对象进行锁定。该注解也是为了达到该目的。

=========================================================
